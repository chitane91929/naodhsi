          Start-Sleep -Seconds 5
          $timeout -= 5
          
          # Try API first
          try {
            $response = Invoke-RestMethod -Uri "http://localhost:4040/api/tunnels" -ErrorAction Stop
            $tunnelUrl = $response.tunnels[0].public_url -replace "tcp://", ""
          } catch {
            # Fallback to log parsing
            $logContent = Get-Content ngrok.log -ErrorAction SilentlyContinue
            $tunnelUrl = $logContent | Select-String -Pattern "tcp://([a-zA-Z0-9\.\-]+:\d+)" | ForEach-Object { $_.Matches.Groups[1].Value }
          }
        }

        if (-not $tunnelUrl) {
          Write-Output "::error::Failed to establish Ngrok tunnel after 60 seconds"
          Write-Output "=== Ngrok Log Contents ==="
          Get-Content ngrok.log
          exit 1
        }

        Write-Output "=========================================="
        Write-Output "||        RDP CONNECTION DETAILS        ||"
        Write-Output "=========================================="
        Write-Output "Address: $tunnelUrl"
        Write-Output "Username: kamel007"
        Write-Output "Password: kamel007"
        Write-Output "------------------------------------------"
        Write-Output "1. Open Remote Desktop (Win+R â†’ mstsc)"
        Write-Output "2. Connect to: $tunnelUrl"
        Write-Output "3. Use credentials above when prompted"
        Write-Output "=========================================="
        Write-Output "Note: This VM will self-destruct after 6 hours"
        Write-Output "=========================================="

        # Keep alive
        while ($true) { Start-Sleep -Seconds 300 }

    - name: Force cleanup
      if: always()
      run: |
        Stop-Process -Name "ngrok" -Force -ErrorAction SilentlyContinue
        Stop-Process -Name "rdp" -Force -ErrorAction SilentlyContinue
